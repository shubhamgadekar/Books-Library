name: Android Unit Tests with JaCoCo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      # 1. Checkout repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Gradle deps
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # 4. Run tests + coverage
      - name: Run unit tests with JaCoCo
        run: ./gradlew clean testDebugUnitTest jacocoTestReport

      # 5. Upload HTML report as artifact
      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/jacocoTestReport/

      # 6. Check coverage and publish report
      - name: Add coverage to PR (comment + checks)
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 30
          update-comment: true
          title: Coverage Report

      - name: Fail PR if coverage too low
        if: ${{ steps.jacoco.outputs.coverage-overall != '' && steps.jacoco.outputs.coverage-overall < 30 }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed(
              `Overall coverage is below threshold: ${steps.jacoco.outputs.coverage-overall}%`
            )
